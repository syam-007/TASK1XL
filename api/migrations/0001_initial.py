# Generated by Django 5.1 on 2024-09-09 11:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomerMaster",
            fields=[
                ("customer_id", models.AutoField(primary_key=True, serialize=False)),
                ("customer_name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "task_customer_master",
            },
        ),
        migrations.CreateModel(
            name="HoleSection",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("hole_section", models.CharField(max_length=255)),
                ("survey_run_in", models.CharField(max_length=255)),
                ("minimum_id", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "task_holesection_master",
            },
        ),
        migrations.CreateModel(
            name="RigMaster",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("rig_number", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "task_rig_master",
            },
        ),
        migrations.CreateModel(
            name="ServiceType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("service_type", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "task_service_master",
            },
        ),
        migrations.CreateModel(
            name="SurveyTypes",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("survey_types", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "task_survey_types_master",
            },
        ),
        migrations.CreateModel(
            name="ToolMaster",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("type_of_tools", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "task_tools_master",
            },
        ),
        migrations.CreateModel(
            name="UnitofMeasureMaster",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("unit_of_measure", models.CharField(max_length=3)),
            ],
            options={
                "db_table": "task_unit_of_measure",
            },
        ),
        migrations.CreateModel(
            name="WelltypeMaster",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("well_type", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "task_well_type_master",
            },
        ),
        migrations.CreateModel(
            name="EmployeeMaster",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("emp_id", models.CharField(max_length=255, unique=True)),
                ("emp_name", models.CharField(max_length=255)),
                ("emp_short_name", models.CharField(max_length=255, null=True)),
                ("emp_designation", models.CharField(max_length=255, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        db_column="user",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "task_employee_master",
            },
        ),
        migrations.CreateModel(
            name="CreateJob",
            fields=[
                (
                    "job_number",
                    models.CharField(
                        max_length=255, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("location", models.CharField(max_length=255)),
                ("estimated_date", models.DateTimeField()),
                ("job_created_date", models.DateTimeField(auto_now=True)),
                ("job_assign_date", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.customermaster",
                    ),
                ),
                (
                    "assign_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.employeemaster",
                    ),
                ),
                (
                    "rig_number",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="api.rigmaster"
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.servicetype",
                    ),
                ),
                (
                    "unit_of_measure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.unitofmeasuremaster",
                    ),
                ),
            ],
            options={
                "db_table": "task_create_job",
            },
        ),
        migrations.CreateModel(
            name="JobInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_rep", models.CharField(max_length=255)),
                ("arrival_date", models.DateField(auto_now_add=True)),
                ("well_id", models.IntegerField()),
                ("well_name", models.CharField(max_length=255)),
                ("estimated_date", models.DateTimeField()),
                (
                    "job_number",
                    models.ForeignKey(
                        db_column="job_number",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.createjob",
                    ),
                ),
            ],
            options={
                "db_table": "task_job_info",
            },
        ),
        migrations.CreateModel(
            name="SurveyInitialDataHeader",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("survey_date", models.DateField(auto_now_add=True)),
                (
                    "job_number",
                    models.ForeignKey(
                        db_column="job_number",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.createjob",
                    ),
                ),
                (
                    "survey_type",
                    models.ForeignKey(
                        db_column="survey_type",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.surveytypes",
                    ),
                ),
            ],
            options={
                "db_table": "task_survey_initial_data_header",
            },
        ),
        migrations.CreateModel(
            name="SurveyInitialDataDetail",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("depth", models.IntegerField()),
                ("Inc", models.DecimalField(decimal_places=2, max_digits=3)),
                ("AzG", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "g_t",
                    models.DecimalField(
                        db_column="G(t)", decimal_places=2, max_digits=5
                    ),
                ),
                (
                    "w_t",
                    models.DecimalField(
                        db_column="W(t)", decimal_places=2, max_digits=5
                    ),
                ),
                ("g_t_status", models.CharField(max_length=10)),
                ("w_t_status", models.CharField(max_length=10)),
                ("status", models.CharField(max_length=10)),
                (
                    "g_t_difference",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "w_t_difference",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "job_number",
                    models.ForeignKey(
                        db_column="job_number",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.createjob",
                    ),
                ),
                (
                    "header",
                    models.ForeignKey(
                        db_column="header_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="api.surveyinitialdataheader",
                    ),
                ),
            ],
            options={
                "db_table": "task_survey_initial_data_detail",
            },
        ),
        migrations.CreateModel(
            name="TieOnInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("measured_depth", models.IntegerField()),
                ("true_vertical_depth", models.IntegerField()),
                ("inclination", models.IntegerField()),
                ("latitude", models.IntegerField()),
                ("azimuth", models.IntegerField()),
                ("departure", models.IntegerField()),
                (
                    "job_number",
                    models.ForeignKey(
                        db_column="job_number",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.createjob",
                    ),
                ),
            ],
            options={
                "db_table": "task_survey_tie_on_info",
            },
        ),
        migrations.CreateModel(
            name="SurveyInfo",
            fields=[
                ("survey_info_id", models.AutoField(primary_key=True, serialize=False)),
                ("run_name", models.CharField(max_length=3)),
                ("run_number", models.IntegerField()),
                ("survey_run_in", models.CharField(max_length=255)),
                ("minimum_id", models.CharField(max_length=100)),
                ("north_reference", models.CharField(max_length=255)),
                ("survey_calculation_method", models.CharField(max_length=255)),
                ("map_zone", models.CharField(max_length=255)),
                ("geodetic_system", models.CharField(max_length=255)),
                ("geodetic_datum", models.CharField(max_length=255)),
                ("start_depth", models.IntegerField()),
                ("tag_depth", models.IntegerField()),
                ("proposal_direction", models.IntegerField()),
                (
                    "hole_section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.holesection",
                    ),
                ),
                (
                    "job_number",
                    models.ForeignKey(
                        db_column="job_number",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.createjob",
                    ),
                ),
                (
                    "survey_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.surveytypes",
                    ),
                ),
                (
                    "type_of_tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="api.toolmaster"
                    ),
                ),
            ],
            options={
                "db_table": "task_survey_info",
            },
        ),
        migrations.CreateModel(
            name="WellInfo",
            fields=[
                ("well_info_id", models.AutoField(primary_key=True, serialize=False)),
                ("well_id", models.IntegerField()),
                ("latitude_1", models.IntegerField()),
                ("latitude_2", models.IntegerField()),
                ("latitude_3", models.DecimalField(decimal_places=5, max_digits=7)),
                ("longitude_1", models.IntegerField()),
                ("longitude_2", models.IntegerField()),
                ("longitude_3", models.DecimalField(decimal_places=5, max_digits=7)),
                ("northing", models.DecimalField(decimal_places=4, max_digits=10)),
                ("easting", models.DecimalField(decimal_places=4, max_digits=10)),
                ("expected_well_temp", models.IntegerField()),
                ("expected_wellbore_inclination", models.IntegerField()),
                ("central_meridian", models.IntegerField()),
                ("GLE", models.DecimalField(decimal_places=2, max_digits=6)),
                ("RKB", models.DecimalField(decimal_places=2, max_digits=3)),
                ("ref_elivation", models.CharField(max_length=255)),
                ("ref_datum", models.CharField(max_length=255)),
                (
                    "job_number",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="api.createjob"
                    ),
                ),
                (
                    "well_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.welltypemaster",
                    ),
                ),
            ],
            options={
                "db_table": "task_well_info",
            },
        ),
    ]
